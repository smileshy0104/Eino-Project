version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: ai-assistant-mysql
    ports:
      - "3307:3306"  # 改用3307端口避免冲突
    environment:
      MYSQL_ROOT_PASSWORD: password123
      MYSQL_DATABASE: ai_assistant
      MYSQL_USER: ai_user
      MYSQL_PASSWORD: ai_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: ai-assistant-redis
    ports:
      - "6380:6379"  # 改用6380端口避免冲突
    volumes:
      - redis_data_ai:/data
    restart: unless-stopped

  # AI文档助手主应用（使用本地构建，不依赖外部Milvus）
  ai-doc-assistant:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: ai-doc-assistant-app
    ports:
      - "8080:8080"
    environment:
      - AI_DOC_SERVER_PORT=8080
      - AI_DOC_SERVER_MODE=debug
      - AI_DOC_DATABASE_MYSQL_HOST=mysql
      - AI_DOC_DATABASE_MYSQL_PORT=3306
      - AI_DOC_DATABASE_MYSQL_USERNAME=ai_user
      - AI_DOC_DATABASE_MYSQL_PASSWORD=ai_password
      - AI_DOC_DATABASE_MYSQL_DATABASE=ai_assistant
      - AI_DOC_DATABASE_MILVUS_HOST=host.docker.internal
      - AI_DOC_DATABASE_MILVUS_PORT=19530
      - AI_DOC_DATABASE_REDIS_HOST=redis
      - AI_DOC_DATABASE_REDIS_PORT=6379
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  mysql_data:
    driver: local
  redis_data_ai:
    driver: local

networks:
  default:
    name: ai-assistant-network
